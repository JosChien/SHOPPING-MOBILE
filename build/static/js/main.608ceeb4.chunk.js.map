{"version":3,"sources":["image/logo.png","components/dataCart.js","components/Menu.js","components/data.js","components/renderProduct.js","components/Products.js","components/mobile.js","components/cart.js","components/details.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CartContext","React","createContext","CartProviders","props","state","cartItems","addToCart","bind","increase","reduce","removeItem","total","product","this","filter","item","id","length","quantity","setState","concat","index","indexOf","stateCopy","Object","assign","slice","map","value","price","currentValue","Total","Provider","children","Component","Menu","toggle","isOpen","Navbar","light","expand","className","src","logo","alt","width","height","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","to","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Consumer","DataContext","DataProvider","products","axios","get","then","res","data","RenderProducts","Row","Col","key","sm","Card","CardImg","top","imageUrl","CardBody","CardTitle","title","name","CardSubtitle","CardText","decrisption","Button","Products","Mobile","currentRoute","window","location","pathname","split","manufacturer","Cart","Table","striped","style","textAlign","marginTop","scope","Details","URLSearchParams","search","description","join","Specifications","Memory","Storage","SIM","Battery","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,kC,yPCE9BC,EAAcC,IAAMC,gBAEZC,E,YACjB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,UAAW,IAEf,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBACd,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,MAAQ,EAAKA,MAAMJ,KAAX,gBATC,E,uEAWJK,GACmE,IAAtEC,KAAKT,MAAMC,UAAUS,QAAO,SAAAC,GAAI,OAAGA,EAAKC,KAAOJ,EAAQI,MAAIC,SAG9DL,EAAQM,SAAW,EACnBL,KAAKM,SAAS,CACVd,UAAWQ,KAAKT,MAAMC,UAAUe,OAAOR,Q,+BAItCG,GAAM,IAEPM,EADgBR,KAAKT,MAAlBC,UACeiB,QAAQP,GAC1BQ,EAAYC,OAAOC,OAAO,GAAIZ,KAAKT,OACvCmB,EAAUlB,UAAUgB,GAAOH,UAAY,EACvCL,KAAKM,SAASI,K,6BAGXR,GAAM,IAELM,EADgBR,KAAKT,MAAlBC,UACeiB,QAAQP,GAC1BQ,EAAYC,OAAOC,OAAO,GAAIZ,KAAKT,OACpCmB,EAAUlB,UAAUgB,GAAOH,UAAU,IAGxCK,EAAUlB,UAAUgB,GAAOH,UAAY,EACvCL,KAAKM,SAASI,M,iCAGPR,GAAM,IACNV,EAAWQ,KAAKT,MAAhBC,UACHgB,EAAQhB,EAAUiB,QAAQP,GAC9BF,KAAKM,SAAS,CACVd,UAAU,GAAD,mBAAMA,EAAUqB,MAAM,EAAEL,IAAxB,YAAkChB,EAAUqB,MAAML,EAAM,S,8BAOrE,OAFoBR,KAAKT,MAAlBC,UACasB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,MAAMD,EAAMV,YACxCT,QAAO,SAACqB,EAAaC,GAAd,OAAwBD,EAAaC,IAAM,K,+BAIjE,OACI,kBAAChC,EAAYiC,SAAb,CAAsBJ,MAAS,CAC3BvB,UAAWQ,KAAKT,MAAMC,UACtBC,UAAWO,KAAKP,UAChBE,SAAUK,KAAKL,SACfC,OAAQI,KAAKJ,OACbC,WAAYG,KAAKH,WACjBC,MAAOE,KAAKF,QAEXE,KAAKV,MAAM8B,c,GAjEeC,a,6ECYtBC,E,YACnB,WAAYhC,GAAQ,IAAD,8BACjB,4CAAMA,KACDiC,OAAS,EAAKA,OAAO7B,KAAZ,gBACd,EAAKH,MAAQ,CACXiC,QAAQ,GAJO,E,sEASjBxB,KAAKM,SAAS,CACZkB,QAASxB,KAAKT,MAAMiC,W,+BAItB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,OAAO,KAAKC,UAAU,kCAChC,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,QACb,yBAAKC,IAAK7B,KAAKV,MAAMwC,KAAMC,IAAI,OAAOC,MAAO,IAAKC,OAAQ,OAGhE,kBAACC,EAAA,EAAD,CAAeC,QAASnC,KAAKuB,SAC7B,kBAACa,EAAA,EAAD,CAAUZ,OAAQxB,KAAKT,MAAMiC,OAAQa,QAAM,GACzC,kBAACC,EAAA,EAAD,CAAKV,UAAU,oBAAoBS,QAAM,GACvC,kBAACE,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMC,GAAG,IAAIZ,UAAU,QAAvB,aAEA,kBAACa,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChC,kBAACC,EAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,GAAzB,UAGA,kBAACC,EAAA,EAAD,CAAcC,OAAK,GACnB,kBAAC,IAAD,CAAMP,GAAI,UAAUZ,UAAU,QAC5B,kBAACoB,EAAA,EAAD,gBAEA,kBAAC,IAAD,CAAMR,GAAI,WAAWZ,UAAU,QAC/B,kBAACoB,EAAA,EAAD,qBAMR,kBAAC,IAAD,CAAMR,GAAI,QAAQZ,UAAU,QAC5B,4BAAQA,UAAU,UAChB,kBAAC1C,EAAY+D,SAAb,MAEI,gBAAEzD,EAAF,EAAEA,UAAF,OAAkB,0BAAMoC,UAAU,eAAepC,EAAUY,WAGjE,kBAAC,IAAD,CAAgBwB,UAAU,uB,GAnDFzC,IAAMkC,W,kCCb3B6B,EAAc/D,IAAMC,gBAEZ+D,E,YACjB,WAAY7D,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACT6D,SAAW,IAHD,E,iFAME,IAAD,OACjBC,IAAMC,IAAI,qCAAqCC,MAAK,SAAAC,GAAG,OACvD,EAAKlD,SAAS,CACZ8C,SAAUI,EAAIC,Y,+BAKd,OACI,kBAACP,EAAY/B,SAAb,CAAsBJ,MAAS,CAC3BqC,SAAWpD,KAAKT,MAAM6D,WAErBpD,KAAKV,MAAM8B,c,GAnBcC,a,gFCkC3BqC,E,YA/BX,WAAYpE,GAAO,qEACTA,I,sEAED,IACE8D,EAAYpD,KAAKV,MAAjB8D,SACP,OACI,kBAACO,EAAA,EAAD,KACIP,EAAStC,KAAI,SAAAZ,GAAI,OACjB,kBAAC0D,EAAA,EAAD,CAAKhC,UAAU,iBAAiBiC,IAAK3D,EAAKC,GAAI2D,GAAG,KACjD,kBAACC,EAAA,EAAD,CAAMnC,UAAU,cAChB,kBAAC,IAAD,CAAMY,GAAI,gBAAgBtC,EAAK2D,IAAKjC,UAAU,gBAC9C,kBAACoC,EAAA,EAAD,CAASpC,UAAU,YAAYqC,KAAG,EAACjC,MAAM,OAAOH,IAAK3B,EAAKgE,SAAUnC,IAAI,mBACxE,kBAACoC,EAAA,EAAD,CAAUvC,UAAU,kBACpB,kBAAEwC,EAAA,EAAF,CAAYxC,UAAU,kBAAkByC,MAAOnE,EAAKoE,MAAOpE,EAAKoE,MAChE,kBAACC,EAAA,EAAD,CAAc3C,UAAY,kBAA1B,IAA6C1B,EAAKc,OAClD,kBAACwD,EAAA,EAAD,CAAU5C,UAAU,cAAc1B,EAAKuE,eAGvC,kBAACvF,EAAY+D,SAAb,MAEI,gBAAExD,EAAF,EAAEA,UAAF,OAAe,kBAACiF,EAAA,EAAD,CAAQ9C,UAAU,MAAMO,QAAS,kBAAM1C,EAAUS,KAAjD,4B,GArBNmB,aCgBdsD,E,YAjBX,WAAYrF,GAAO,qEACTA,I,sEAGN,OACI,yBAAKsC,UAAU,aACf,wBAAIA,UAAU,SAAd,gBACA,kBAACsB,EAAYD,SAAb,MAEQ,gBAAEG,EAAF,EAAEA,SAAF,OAAgB,kBAAC,EAAD,CAAeA,SAAYA,Y,GAVxCjE,IAAMkC,WCDPuD,E,YAClB,aAAc,uE,sEAIV,IAAIC,EAAeC,OAAOC,SAASC,SAEvC,OADIH,EAAeA,EAAaI,MAAM,KAAK,GAEvC,yBAAKrD,UAAU,aACX,wBAAIA,UAAU,SAAd,UAA8BiD,GAC9B,kBAAC3B,EAAYD,SAAb,MAEQ,gBAAEG,EAAF,EAAEA,SAAF,OAAe,kBAAC,EAAD,CAAeA,SAAYA,EAASnD,QAAO,SAAAc,GAEtD,MAAmB,WAAhB8D,EAC0B,WAAvB9D,EAAMmE,aAEkB,YAAvBnE,EAAMmE,0B,GAjBA/F,IAAMkC,W,SCEtB8D,E,YACjB,WAAY7F,GAAO,qEACTA,I,sEAIN,OACI,yBAAKsC,UAAU,aACnB,kBAACwD,EAAA,EAAD,CAAOC,SAAO,EAACC,MAAO,CAACC,UAAW,SAAUC,UAAW,SACvD,+BACE,wBAAI5D,UAAU,eACZ,iCACA,qCACA,4CACA,wCACA,2CACA,wCACA,+BAGJ,+BACA,kBAAC1C,EAAY+D,SAAb,MAEI,gBAAEzD,EAAF,EAAEA,UAAUG,EAAZ,EAAYA,SAASC,EAArB,EAAqBA,OAAOC,EAA5B,EAA4BA,WAA5B,OAA2CL,EAAUsB,KAAI,SAAAZ,GAAI,OAC7D,wBAAI2D,IAAO3D,EAAKC,IACZ,wBAAIsF,MAAM,OAAOjG,EAAUiB,QAAQP,GAAM,GACzC,4BAAI,yBAAK2B,IAAK3B,EAAKgE,SAAUtC,UAAU,aACvC,wBAAIA,UAAU,YAAa1B,EAAKoE,MAChC,wBAAI1C,UAAU,YACV,4BAAQO,QAAU,kBAAIvC,EAAOM,KAA7B,KACA,8BAAOA,EAAKG,UACZ,4BAAQ8B,QAAW,kBAAIxC,EAASO,KAAhC,MAEJ,gCAAOA,EAAKc,OACZ,gCAAOd,EAAKc,MAAMd,EAAKG,UACvB,4BACA,kBAAC,IAAD,CAAeuB,UAAU,WAAWO,QAAS,kBAAKtC,EAAWK,gBAQrE,kBAAChB,EAAY+D,SAAb,MAEE,gBAAEnD,EAAF,EAAEA,MAAF,OAAa,yBAAK8B,UAAU,SAAf,WAAgC9B,a,GA9CrBuB,aCFbqE,E,YACjB,WAAYpG,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTQ,QAAS,IAHE,E,kFAOG,IAAD,OAEX8D,EADY,IAAI8B,gBAAgBb,OAAOC,SAASa,QAChCtC,IAAI,OAC1BD,IAAMC,IAAI,+BAAiCO,GAAKN,MAAK,SAAAC,GACrD,EAAKlD,SAAS,CACVP,QAASyD,EAAIC,Y,+BAMX,IACE1D,EAAYC,KAAKT,MAAjBQ,QACR,OAAKA,EAAQ8F,YAIT,yBAAKjE,UAAU,aACX,wBAAIA,UAAU,gBAAgB7B,EAAQuE,MACtC,yBAAK1C,UAAU,mBACX,yBAAK0D,MAAO,CAAErD,OAAQ,QAASuD,UAAW,QAAU3D,IAAK9B,EAAQmE,WACjE,yBAAKtC,UAAU,eACX,sCAAW,8BAAO7B,EAAQiB,QAC1B,kBAAC9B,EAAY+D,SAAb,MAEQ,gBAAGxD,EAAH,EAAGA,UAAH,OAAmB,4BAAQmC,UAAU,aAAaO,QAAS,kBAAM1C,EAAUM,KAAxD,kBAG3B,2CACA,2BAAIA,EAAQ8F,YAAYC,KAAK,QAEjC,yBAAKlE,UAAU,aACX,8CACA,4BACI,4BAAI,2CAAJ,IAA2B,iCAAO7B,EAAQgG,eAAR,QAAP,MAC3B,4BAAI,mDAAJ,IAAmC,iCAAOhG,EAAQgG,eAAR,gBAAP,MACnC,4BAAI,kDAA6B,iCAAOhG,EAAQgG,eAAR,IAAP,MACjC,4BAAI,0CAAqB,iCAAOhG,EAAQgG,eAAeC,OAA9B,MACzB,4BAAI,0CAAqB,iCAAOjG,EAAQgG,eAAeE,QAA9B,MACzB,4BAAI,iDAAJ,IAAiC,iCAAOlG,EAAQgG,eAAeG,IAA9B,MACjC,4BAAI,0CAAJ,IAA0B,iCAAOnG,EAAQgG,eAAeI,QAA9B,UA1BnC,S,GAtBkB9E,a,QC0CtB+E,E,YA9Bb,aAAe,IAAD,8BACZ,+CACK7G,MAAM,GAFC,E,sEAMZ,OACI,kBAAC,EAAD,KACE,yBAAKqC,UAAU,OACjB,kBAAC,IAAD,KACE,6BAASA,UAAU,UACjB,kBAAC,EAAD,CAAME,KAAMA,OAEd,6BAASF,UAAU,cACjB,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,IAAIC,UAAW5B,IACjC,kBAAC,IAAD,CAAO2B,KAAK,UAAUC,UAAW3B,IACjC,kBAAC,IAAD,CAAO0B,KAAK,WAAWC,UAAW3B,IAClC,kBAAC,IAAD,CAAO0B,KAAK,QAAQC,UAAWpB,IAC/B,kBAAC,IAAD,CAAOmB,KAAK,WAAWC,UAAWb,c,GArBhCvG,IAAMkC,WCHJmF,QACW,cAA7B1B,OAAOC,SAAS0B,UAEe,UAA7B3B,OAAOC,SAAS0B,UAEhB3B,OAAOC,SAAS0B,SAASC,MACvB,2DCPNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1D,MAAK,SAAA2D,GACjCA,EAAaC,kB","file":"static/js/main.608ceeb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c47db8c9.png\";","import React, {Component} from 'react'\r\n\r\nexport const CartContext = React.createContext();\r\n\r\nexport default class CartProviders extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cartItems :[]\r\n        };\r\n        this.addToCart = this.addToCart.bind(this);  \r\n        this.increase = this.increase.bind(this);\r\n        this.reduce = this.reduce.bind(this);\r\n        this.removeItem = this.removeItem.bind(this);\r\n        this.total = this.total.bind(this)\r\n    }\r\n        addToCart(product){\r\n            if(this.state.cartItems.filter(item =>item.id === product.id).length !== 0){\r\n                return\r\n            }\r\n            product.quantity = 1;\r\n            this.setState({\r\n                cartItems: this.state.cartItems.concat(product)\r\n            })\r\n        }   \r\n\r\n        increase(item){\r\n            const {cartItems} = this.state\r\n            let index = cartItems.indexOf(item)\r\n            let stateCopy = Object.assign({}, this.state);\r\n            stateCopy.cartItems[index].quantity += 1;\r\n            this.setState(stateCopy);\r\n        }\r\n\r\n        reduce(item){\r\n            const {cartItems} = this.state\r\n            let index = cartItems.indexOf(item)\r\n            let stateCopy = Object.assign({}, this.state);\r\n            if(stateCopy.cartItems[index].quantity<=1){\r\n                return;\r\n            }\r\n            stateCopy.cartItems[index].quantity -= 1;\r\n            this.setState(stateCopy);\r\n        }\r\n\r\n        removeItem(item){\r\n            const {cartItems}=this.state\r\n            let index = cartItems.indexOf(item);\r\n            this.setState({\r\n                cartItems: [...cartItems.slice(0,index),...cartItems.slice(index+1)]\r\n            })\r\n        }\r\n        \r\n        total(){\r\n            const {cartItems} = this.state;\r\n            let arr = cartItems.map(value => value.price*value.quantity);\r\n            return arr.reduce((currentValue,Total) => currentValue+Total,0)\r\n        }\r\n\r\n    render(){\r\n        return(\r\n            <CartContext.Provider value = {{\r\n                cartItems: this.state.cartItems,\r\n                addToCart: this.addToCart,\r\n                increase: this.increase,\r\n                reduce: this.reduce,\r\n                removeItem: this.removeItem,\r\n                total: this.total\r\n            }}>\r\n                {this.props.children}\r\n            </CartContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Route, Link} from \"react-router-dom\";\r\nimport { FaShoppingCart } from \"react-icons/fa\";\r\nimport {CartContext} from './dataCart';\r\n\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    Nav,\r\n    NavItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem } from 'reactstrap';\r\n\r\nexport default class Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n}\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar light expand=\"md\" className='container padding customNavbar'>\r\n            <div className=\"container-child1\">\r\n              <div className=\"logo\">\r\n                <img src={this.props.logo} alt=\"logo\" width={120} height={80}/>\r\n              </div>\r\n            </div>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto FloatLeft\" navbar>\r\n              <NavItem>\r\n              <Link to=\"/\" className=\"link\">Products</Link>\r\n              </NavItem>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Filter\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                <Link to =\"/iphone\" className=\"link\">\r\n                  <DropdownItem>Iphone</DropdownItem>\r\n                  </Link>\r\n                  <Link to =\"/samsung\" className=\"link\">\r\n                  <DropdownItem>Samsung</DropdownItem>\r\n                  </Link>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n          <Link to ='/cart' className='link'>\r\n          <button className=\"button\">\r\n            <CartContext.Consumer>\r\n              {\r\n                ({cartItems}) => (<span className='countNumber'>{cartItems.length}</span>)\r\n              }\r\n            </CartContext.Consumer>\r\n          <FaShoppingCart className='customIcon'/>\r\n          </button>\r\n          </Link>\r\n        </Navbar>\r\n        </div>\r\n    );\r\n  }  \r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport axios from \"axios\"\r\n\r\nexport const DataContext = React.createContext();\r\n\r\nexport default class DataProvider extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            products : []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n      axios.get('https://api.myjson.com/bins/9nfhu').then(res =>\r\n      this.setState({\r\n        products: res.data\r\n      })\r\n      )\r\n    }\r\n    render(){\r\n        return(\r\n            <DataContext.Provider value = {{\r\n                products : this.state.products\r\n            }}>\r\n                {this.props.children}\r\n            </DataContext.Provider>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {CartContext} from './dataCart';\r\nimport {Row, Col, Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass RenderProducts extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const {products} = this.props;\r\n        return(\r\n            <Row>{\r\n                products.map(item =>\r\n                <Col className=\"CustomItemCard\" key={item.id} sm='3' >\r\n                <Card className='customCard' >\r\n                <Link to={'/details?key='+item.key} className=\"details-link\">   \r\n                <CardImg className='customImg' top width=\"100%\" src={item.imageUrl} alt=\"Card image cap\" />\r\n                <CardBody className='customCardBody'>\r\n                < CardTitle className='customCardTitle' title={item.name}>{item.name}</CardTitle>\r\n                <CardSubtitle className = 'customSubtitle'>${item.price}</CardSubtitle>\r\n                <CardText className=\"customText\">{item.decrisption}</CardText>\r\n                </CardBody>\r\n                </Link>\r\n                <CartContext.Consumer>\r\n                  {\r\n                    ({addToCart})=><Button className='add' onClick={() => addToCart(item)}>Add to cart</Button>\r\n                  }\r\n                </CartContext.Consumer>\r\n                </Card>\r\n                </Col>\r\n                )}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n        \r\nexport default RenderProducts\r\n\r\n   ","import React from 'react';\r\nimport {DataContext} from './data'\r\nimport RenderProduct from './renderProduct'\r\n\r\n\r\nclass Products extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n            <h2 className='title'>MOBILE STORE</h2>\r\n            <DataContext.Consumer>\r\n                {\r\n                    ({products}) => <RenderProduct products = {products}/>\r\n                }\r\n            </DataContext.Consumer>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default Products","import React from 'react';\r\nimport RenderProduct from './renderProduct';\r\nimport {DataContext} from './data'\r\n\r\nexport default  class Mobile extends React.Component{\r\n    constructor(){\r\n        super();\r\n    }\r\n    render(){\r\n        var currentRoute = window.location.pathname;\r\n        currentRoute = currentRoute.split('/')[1];\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='title'>MOBILE {currentRoute}</h1>\r\n            <DataContext.Consumer>\r\n                {   \r\n                    ({products})=> <RenderProduct products = {products.filter(value =>\r\n                        {\r\n                        if(currentRoute ==='iphone'){\r\n                       return value.manufacturer === 'iphone'\r\n                    }else{\r\n                        return value.manufacturer === 'samsung'\r\n                    }} \r\n                    )}/>\r\n                }\r\n            </DataContext.Consumer>\r\n        </div>\r\n            )\r\n            }\r\n}","import React,{Component} from 'react';\r\nimport {CartContext} from './dataCart';\r\n\r\nimport { Table } from 'reactstrap';\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\n\r\nexport default class Cart extends Component{\r\n    constructor(props){\r\n        super(props);  \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n        <Table striped style={{textAlign: 'center', marginTop: '40px'}}>\r\n        <thead>\r\n          <tr className='tableHeader'>\r\n            <th>#</th>\r\n            <th>Image</th>\r\n            <th>Product name</th>\r\n            <th>Quantity</th>\r\n            <th>Unit Price </th>\r\n            <th>subTotal</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        <CartContext.Consumer>\r\n        {\r\n            ({cartItems,increase,reduce,removeItem}) =>cartItems.map(item =>\r\n            <tr key = {item.id}>\r\n                <th scope=\"row\">{cartItems.indexOf(item)+1}</th>\r\n                <td><img src={item.imageUrl} className='cartImg'/></td>\r\n                <td className='cartName' >{item.name}</td>\r\n                <td className='quantity'>\r\n                    <button onClick ={()=>reduce(item)}>-</button>\r\n                    <span>{item.quantity}</span>\r\n                    <button onClick = {()=>increase(item)} >+</button>\r\n                </td>\r\n                <td >${item.price}</td>\r\n                <td >${item.price*item.quantity}</td>\r\n                <td>\r\n                <FaRegTrashAlt className='cartIcon' onClick={()=> removeItem(item)}/>\r\n                </td>\r\n            </tr>\r\n            )\r\n        }  \r\n        </CartContext.Consumer>\r\n        </tbody>\r\n        </Table>\r\n        <CartContext.Consumer>\r\n        {\r\n          ({total}) => <div className='total'>Total: ${total()}</div>\r\n        }\r\n        </CartContext.Consumer>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { CartContext } from './dataCart';\r\nimport axios from 'axios'\r\n\r\nexport default class Details extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: {}\r\n        }\r\n    }\r\n    \r\n    componentWillMount() {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const key = urlParams.get('key');\r\n        axios.get('https://api.myjson.com/bins/' + key).then(res => {\r\n        this.setState({\r\n            product: res.data\r\n        })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { product } = this.state;\r\n        if (!product.description) {\r\n            return null\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <h2 className='detail-title'>{product.name}</h2>\r\n                <div className='details-content'>\r\n                    <img style={{ height: '300px', marginTop: '20px' }} src={product.imageUrl} />\r\n                    <div className='detailsCol2'>\r\n                        <h5>Price: <span>{product.price}</span></h5>\r\n                        <CartContext.Consumer>\r\n                            {\r\n                                ({ addToCart }) => <button className='detail-add' onClick={() => addToCart(product)}>Add to cart</button>\r\n                            }\r\n                        </CartContext.Consumer>\r\n                        <h3>Smart phone</h3>\r\n                        <p>{product.description.join('. ')}</p>\r\n                    </div>\r\n                    <div className='parameter'>\r\n                        <h4>Specifications</h4>\r\n                        <ul>\r\n                            <li><span>Display: </span> <div> {product.Specifications['Display']} </div></li>\r\n                            <li><span>Operating System:</span> <div> {product.Specifications['OperatingSystem']} </div></li>\r\n                            <li><span>Processor (CPU):</span><div> {product.Specifications['CPU']} </div></li>\r\n                            <li><span>Memory: </span><div> {product.Specifications.Memory} </div></li>\r\n                            <li><span>Storage:</span><div> {product.Specifications.Storage} </div></li>\r\n                            <li><span>SIM capability:</span> <div> {product.Specifications.SIM} </div></li>\r\n                            <li><span>Battery:</span> <div> {product.Specifications.Battery} </div></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\nimport logo from './image/logo.png';\nimport Products from './components/Products';\nimport CartProviders from './components/dataCart';\nimport Mobile from './components/mobile';\nimport DataProvider from './components/data';\nimport Cart from './components/cart';\nimport Details from './components/details'\n\n// import Home from './components/Home';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state={\n  }\n  }\n  render() {\n    return (\n        <CartProviders> \n          <div className=\"App\">\n        <Router>\n          <section className=\"header\">\n            <Menu logo={logo} />\n          </section>\n          <section className=\"my-content\">\n            <DataProvider>\n              <Switch>\n                <Route exact path=\"/\" component={Products}/>\n                <Route path=\"/iphone\" component={Mobile}/>\n                <Route path=\"/samsung\" component={Mobile} />\n                <Route path=\"/cart\" component={Cart} />\n                <Route path='/details' component={Details}/>\n              </Switch>\n            </DataProvider>\n          </section>\n          </Router>\n      </div>\n      </CartProviders>\n    )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}