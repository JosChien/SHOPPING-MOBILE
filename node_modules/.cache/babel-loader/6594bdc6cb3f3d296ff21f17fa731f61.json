{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT React\\\\shopping\\\\src\\\\components\\\\dataCart.js\";\nimport React, { Component } from 'react';\nexport const CartContext = React.createContext();\nexport default class CartProviders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cartItems: []\n    };\n    this.addToCart = this.addToCart.bind(this);\n    this.increase = this.increase.bind(this);\n    this.reduce = this.reduce.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  addToCart(product) {\n    product.quantity = 1;\n\n    if (this.state.cartItems.indexOf(product) > -1) {\n      return;\n    }\n\n    this.setState({\n      cartItems: this.state.cartItems.concat(product)\n    });\n  }\n\n  increase(item) {\n    const cartItems = this.state.cartItems;\n    let index = cartItems.indexOf(item);\n    let stateCopy = Object.assign({}, this.state);\n    stateCopy.cartItems[index].quantity += 1;\n    this.setState(stateCopy);\n  }\n\n  reduce(item) {\n    const cartItems = this.state.cartItems;\n    let index = cartItems.indexOf(item);\n    let stateCopy = Object.assign({}, this.state);\n\n    if (stateCopy.cartItems[index].quantity <= 1) {\n      return;\n    }\n\n    stateCopy.cartItems[index].quantity -= 1;\n    this.setState(stateCopy);\n  }\n\n  removeItem(item) {\n    const cartItems = this.state.cartItems;\n    var arr = [...cartItems];\n    let index = cartItems.indexOf(item);\n    arr = arr.slice(index, 1);\n    this.setState({\n      cartItems: arr\n    });\n    console.log(cartItems);\n  }\n\n  render() {\n    return React.createElement(CartContext.Provider, {\n      value: {\n        cartItems: this.state.cartItems,\n        addToCart: this.addToCart,\n        increase: this.increase,\n        reduce: this.reduce,\n        removeItem: this.removeItem\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["D:\\PROJECT React\\shopping\\src\\components\\dataCart.js"],"names":["React","Component","CartContext","createContext","CartProviders","constructor","props","state","cartItems","addToCart","bind","increase","reduce","removeItem","product","quantity","indexOf","setState","concat","item","index","stateCopy","Object","assign","arr","slice","console","log","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;AAEP,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAqC;AAChDI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AACGD,EAAAA,SAAS,CAACK,OAAD,EAAS;AACdA,IAAAA,OAAO,CAACC,QAAR,GAAmB,CAAnB;;AACA,QAAG,KAAKR,KAAL,CAAWC,SAAX,CAAqBQ,OAArB,CAA6BF,OAA7B,IAAsC,CAAC,CAA1C,EAA4C;AACxC;AACH;;AACD,SAAKG,QAAL,CAAc;AACVT,MAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAAX,CAAqBU,MAArB,CAA4BJ,OAA5B;AADD,KAAd;AAGH;;AAEDH,EAAAA,QAAQ,CAACQ,IAAD,EAAM;AAAA,UACHX,SADG,GACU,KAAKD,KADf,CACHC,SADG;AAEV,QAAIY,KAAK,GAAGZ,SAAS,CAACQ,OAAV,CAAkBG,IAAlB,CAAZ;AACA,QAAIE,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKhB,KAAvB,CAAhB;AACAc,IAAAA,SAAS,CAACb,SAAV,CAAoBY,KAApB,EAA2BL,QAA3B,IAAuC,CAAvC;AACA,SAAKE,QAAL,CAAcI,SAAd;AACH;;AAEDT,EAAAA,MAAM,CAACO,IAAD,EAAM;AAAA,UACDX,SADC,GACY,KAAKD,KADjB,CACDC,SADC;AAER,QAAIY,KAAK,GAAGZ,SAAS,CAACQ,OAAV,CAAkBG,IAAlB,CAAZ;AACA,QAAIE,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKhB,KAAvB,CAAhB;;AACA,QAAGc,SAAS,CAACb,SAAV,CAAoBY,KAApB,EAA2BL,QAA3B,IAAqC,CAAxC,EAA0C;AACtC;AACH;;AACDM,IAAAA,SAAS,CAACb,SAAV,CAAoBY,KAApB,EAA2BL,QAA3B,IAAuC,CAAvC;AACA,SAAKE,QAAL,CAAcI,SAAd;AACH;;AAEDR,EAAAA,UAAU,CAACM,IAAD,EAAM;AAAA,UACLX,SADK,GACM,KAAKD,KADX,CACLC,SADK;AAEZ,QAAIgB,GAAG,GAAG,CAAC,GAAGhB,SAAJ,CAAV;AACA,QAAIY,KAAK,GAAGZ,SAAS,CAACQ,OAAV,CAAkBG,IAAlB,CAAZ;AACAK,IAAAA,GAAG,GAAGA,GAAG,CAACC,KAAJ,CAAUL,KAAV,EAAgB,CAAhB,CAAN;AACA,SAAKH,QAAL,CAAc;AACVT,MAAAA,SAAS,EAAEgB;AADD,KAAd;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYnB,SAAZ;AACH;;AAELoB,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAI;AAC3BpB,QAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SADK;AAE3BC,QAAAA,SAAS,EAAE,KAAKA,SAFW;AAG3BE,QAAAA,QAAQ,EAAE,KAAKA,QAHY;AAI3BC,QAAAA,MAAM,EAAE,KAAKA,MAJc;AAK3BC,QAAAA,UAAU,EAAE,KAAKA;AALU,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOK,KAAKP,KAAL,CAAWuB,QAPhB,CADJ;AAWH;;AA/D+C","sourcesContent":["import React, {Component} from 'react'\r\n\r\nexport const CartContext = React.createContext();\r\n\r\nexport default class CartProviders extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cartItems :[]\r\n        };\r\n        this.addToCart = this.addToCart.bind(this);  \r\n        this.increase = this.increase.bind(this);\r\n        this.reduce = this.reduce.bind(this);\r\n        this.removeItem = this.removeItem.bind(this)\r\n    }\r\n        addToCart(product){\r\n            product.quantity = 1;\r\n            if(this.state.cartItems.indexOf(product)>-1){\r\n                return\r\n            }\r\n            this.setState({\r\n                cartItems: this.state.cartItems.concat(product)\r\n            })\r\n        }   \r\n\r\n        increase(item){\r\n            const {cartItems} = this.state\r\n            let index = cartItems.indexOf(item)\r\n            let stateCopy = Object.assign({}, this.state);\r\n            stateCopy.cartItems[index].quantity += 1;\r\n            this.setState(stateCopy);\r\n        }\r\n\r\n        reduce(item){\r\n            const {cartItems} = this.state\r\n            let index = cartItems.indexOf(item)\r\n            let stateCopy = Object.assign({}, this.state);\r\n            if(stateCopy.cartItems[index].quantity<=1){\r\n                return;\r\n            }\r\n            stateCopy.cartItems[index].quantity -= 1;\r\n            this.setState(stateCopy);\r\n        }\r\n\r\n        removeItem(item){\r\n            const {cartItems}=this.state\r\n            var arr = [...cartItems];\r\n            let index = cartItems.indexOf(item);\r\n            arr = arr.slice(index,1);\r\n            this.setState({\r\n                cartItems: arr\r\n            })\r\n            console.log(cartItems)\r\n        }\r\n\r\n    render(){\r\n        return(\r\n            <CartContext.Provider value = {{\r\n                cartItems: this.state.cartItems,\r\n                addToCart: this.addToCart,\r\n                increase: this.increase,\r\n                reduce: this.reduce,\r\n                removeItem: this.removeItem\r\n            }}>\r\n                {this.props.children}\r\n            </CartContext.Provider>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}